go.property("coinsPerClickScaler", 4)

function init(self)

	msg.post(".", "acquire_input_focus")

	self.update = 0
	self.coinsPerClick = 1
	self.clickButtonSprite = gui.get_node("clickButton")

	self.coinsPerClickScaler = 4
end



local function GetNewCoinsPerClick(self)
	return self.coinsPerClick * self.coinsPerClickScaler
end

function on_message(self, message_id, message, sender)
	--old
	--if message_id == hash("enable")then
	--	msg.post(".", "acquire_input_focus")
	--end
	if message_id == hash("upgradeClickSprite") then
		print("upgradeClickSprite")
		local sprite = gui.get_node("clickButton")

		if (self.update == 0) then
			gui.play_flipbook(sprite, "Computer2")
			
		elseif (self.update == 1) then
			gui.play_flipbook(sprite, "Computer3")
			
		elseif (self.update == 2) then
			gui.play_flipbook(sprite, "Computer4")
			
		elseif (self.update == 3) then
			gui.play_flipbook(sprite, "Computer5")
			
		end
		self.coinsPerClick = GetNewCoinsPerClick(self)
		self.update = self.update +1
	end
end

function on_input(self, action_id, action)
	if action_id == hash("LEFT_CLICK") and action.released then
		--local clickButtonSprite = gui.get_node("clickButton")

		if gui.pick_node(self.clickButtonSprite, action.x, action.y)then

			msg.post("/Main#main", "addCoin", {coins = self.coinsPerClick})

			--visual feeedback
			gui.set_size(self.clickButtonSprite, vmath.vector3(655,515,0))
			gui.animate(self.clickButtonSprite, "size", vmath.vector3(640, 500, 0), gui.EASING_OUTELASTIC, 1, 0)

			--gui.set_size(self.clickButtonSprite, vmath.vector3(180, 180, 0))
			--timer.delay(0.1, false, resetSpriteSize)
		end

	end	
	
end

